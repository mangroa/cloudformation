AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  InstanceNameParameter:
    Type: String
    Default: instanceName
    Description: Enter a name for your EC2 instance.


Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: myVPC

  mySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "ap-southeast-2a"
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: mySubnet

  myInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
      - Key: Name
        Value: myInternetGateway

  attachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myVPC
      InternetGatewayId:
        Ref: myInternetGateway

  instanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        Ref: myVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0

  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
      - Key: Name
        Value: myRoutingTable

  myRoute:
    Type: AWS::EC2::Route
    DependsOn: myRouteTable
    Properties:
      RouteTableId:
        Ref: myRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myInternetGateway

  MyRouteTableSubnetAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: myRouteTable
      SubnetId:
        Ref: mySubnet

  myEC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-30041c53"
      InstanceType: t2.micro
      KeyName: "ec2keypair"
      SecurityGroupIds:
        - Ref: instanceSecurityGroup
      SubnetId:
        Ref: mySubnet
      Tags:
        - Key: Name
          Value:
            Ref: InstanceNameParameter

  myEC2Instance2:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-30041c53"
      InstanceType: t2.micro
      KeyName: "ec2keypair"
      SecurityGroupIds:
        - Ref: instanceSecurityGroup
      SubnetId:
        Ref: mySubnet
      Tags:
        - Key: Name
          Value:
            Ref: InstanceNameParameter

Outputs:
  myEC2InstanceOutputs:
    Description: The public IP of the EC2 instance
    Value: !GetAtt myEC2Instance.PublicIp



